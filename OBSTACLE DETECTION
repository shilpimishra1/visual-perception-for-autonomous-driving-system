import cv2
import torch

# Load YOLOv8 model
model = torch.hub.load('ultralytics/yolov5', 'yolov5s')  # Using YOLOv5s (similar to YOLOv8)

# Open video file or webcam
video_source = r"C:\Users\ASUS\Downloads\2165-155327596_tiny.mp4"  # Change this to 0 for webcam or use a video file
cap = cv2.VideoCapture(video_source)

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # Object detection using YOLOv8
    results = model(frame)
    detected_objects = results.pandas().xyxy[0]  # Get detection results

    # Draw bounding boxes
    for _, row in detected_objects.iterrows():
        x1, y1, x2, y2, confidence, label = int(row['xmin']), int(row['ymin']), int(row['xmax']), int(row['ymax']), row['confidence'], row['name']
        
        if confidence > 0.5:  # Show only confident detections
            color = (0, 255, 0) if label not in ["person", "car"] else (0, 0, 255)  # Red for obstacles
            cv2.rectangle(frame, (x1, y1), (x2, y2), color, 2)
            cv2.putText(frame, f"{label}: {confidence:.2f}", (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)

    # Show output
    cv2.imshow("Object Detection", frame)
    
    # Press 'q' to exit
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
